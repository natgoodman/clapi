print(n)
getwd()
phyper(x,g1,g2,n)
getwd()
Q
source('R/source.R'); foo_distr(what='hyper',g1=70,g2=30,n=50,m=1000)
c
getwd()
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
plot(ecdf(hits),add=T)
.ess_funargs("match.arg")
getwd()
.ess_funargs("match.arg")
.ess_funargs("match.arg")
.ess_funargs("lapply")
.ess_funargs("lapply")
.ess_funargs("lapply")
.ess_funargs("nil")
.ess_funargs("load_sim")
.ess_funargs("apply")
.ess_funargs("lapply")
.ess_funargs("lapply")
.ess_funargs("lapply")
.ess_funargs("lapply")
.ess_funargs("lapply")
.ess_funargs("range")
.ess_funargs("do.call")
.ess_funargs("do.call")
.ess_funargs("lapply")
what=cq(hyper,binom)
getwd()
.ess_funargs("lapply")
  hits=lapply(what,function(what) {
    file=filename_sim(what,g1,g2,n,m);
    if (!file.exists(file)) dosim(what,g1,g2,n,m);
    sim=load_sim(g1,g2,n,m,what=what,file=file);
    hits=apply(sim,2,function(x) length(which(x<=g1)));
  }
)
str(hits)
.ess_funargs("range")
.ess_funargs("range")
.ess_funargs("range")
.ess_funargs("range")
.ess_funargs("range")
.ess_funargs("range")
.ess_funargs("range")
.ess_funargs("range")
.ess_funargs("range")
.ess_funargs("range")
range(hits[[1]])
.ess_funargs("lapply")
.ess_funargs("lapply")
.ess_funargs("lapply")
.ess_funargs("range")
range(hits[[2]])
.ess_funargs("range")
.ess_funargs("range")
.ess_funargs("range")
.ess_funargs("range")
.ess_funargs("range")
.ess_funargs("range")
.ess_funargs("range")
.ess_funargs("range")
.ess_funargs("do.call")
.ess_funargs("do.call")
.ess_funargs("do.call")
.ess_funargs("do.call")
.ess_funargs("do.call")
.ess_funargs("do.call")
.ess_funargs("do.call")
.ess_funargs("do.call")
.ess_funargs("do.call")
.ess_funargs("range")
range(do.call(c,hits))
.ess_funargs("do.call")
.ess_funargs("do.call")
.ess_funargs("do.call")
.ess_funargs("do.call")
.ess_funargs("do.call")
.ess_funargs("do.call")
.ess_funargs("list")
.ess_funargs("list")
.ess_funargs("list")
.ess_funargs("list")
.ess_funargs("list")
.ess_funargs("list")
.ess_funargs("list")
.ess_funargs("list")
.ess_funargs("do.call")
do.call(c,list(1:5,2:7))
c
c=base::c
c
.ess_funargs("lapply")
.ess_funargs("lapply")
.ess_funargs("lapply")
.ess_funargs("lapply")
.ess_funargs("lapply")
.ess_funargs("lapply")
.ess_funargs("lapply")
.ess_funargs("lapply")
do.call(c,list(1:5,2:7))
getwd()
.ess_funargs("foo_distr")
source('R/source.R'); foo_distr(g1=70,g2=30,n=50,m=1000)
what
xlim
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
plot(xlim=xlim,type='n')
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
plot(x=NULL,y=NULL,xlim=xlim,type='n')
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("c")
.ess_funargs("c")
.ess_funargs("c")
.ess_funargs("c")
.ess_funargs("plot")
.ess_funargs("plot")
plot(x=NULL,y=NULL,xlim=xlim,ylim=c(0,1),type='n')
getwd()
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("paste")
.ess_funargs("paste")
.ess_funargs("paste")
.ess_funargs("paste")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
 plot(x=NULL,y=NULL,type='n',xlim=xlim,ylim=c(0,1),xlab='hits',ylab='cum prob',
      main=paste(paste(sep=',',what),'sim and theory:',nvq(g1,g2,n,m)))
getwd()
.ess_funargs("paste")
.ess_funargs("paste")
.ess_funargs("plot")
  plot(x=NULL,y=NULL,type='n',xlim=xlim,ylim=c(0,1),xlab='hits',ylab='cum prob',
       main=paste(paste(collapse=',',what),'sim and theory:',nvq(g1,g2,n,m)))
.ess_funargs("plot")
paste(paste(collapse=',',what),'sim and theory:',nvq(g1,g2,n,m))
getwd()
.ess_funargs("lapply")
.ess_funargs("lapply")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("lapply")
.ess_funargs("sapply")
.ess_funargs("sapply")
.ess_funargs("cq")
.ess_funargs("cq")
.ess_funargs("cq")
.ess_funargs("cq")
.ess_funargs("sapply")
.ess_funargs("sapply")
.ess_funargs("sapply")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("ecdf")
.ess_funargs("plot")
.ess_funargs("sapply")
.ess_funargs("sapply")
.ess_funargs("sapply")
.ess_funargs("sapply")
.ess_funargs("lines")
.ess_funargs("sapply")
.ess_funargs("length")
.ess_funargs("sapply")
.ess_funargs("sapply")
.ess_funargs("sapply")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("lines")
.ess_funargs("sapply")
.ess_funargs("sapply")
.ess_funargs("sapply")
.ess_funargs("min")
.ess_funargs("min")
.ess_funargs("min")
.ess_funargs("lapply")
.ess_funargs("lapply")
.ess_funargs("lapply")
.ess_funargs("lapply")
.ess_funargs("sapply")
.ess_funargs("sapply")
.ess_funargs("sapply")
.ess_funargs("sapply")
.ess_funargs("sapply")
.ess_funargs("sapply")
.ess_funargs("sapply")
.ess_funargs("sapply")
.ess_funargs("sapply")
.ess_funargs("sapply")
.ess_funargs("sapply")
.ess_funargs("plot")
.ess_funargs("sapply")
.ess_funargs("sapply")
.ess_funargs("sapply")
.ess_funargs("sapply")
.ess_funargs("lapply")
.ess_funargs("do.call")
.ess_funargs("do.call")
.ess_funargs("cbind")
.ess_funargs("do.call")
.ess_funargs("do.call")
.ess_funargs("matlines")
.ess_funargs("matlines")
.ess_funargs("matlines")
Q
source('R/source.R'); foo_distr(g1=70,g2=30,n=50,m=1000)
getwd()
cq(blue,green)
getwd()
.ess_funargs("sapply")
.ess_funargs("nil")
.ess_funargs("matlines")
.ess_funargs("matlines")
source('R/source.R'); foo_distr(g1=70,g2=30,n=50,m=1000)
xlim
c
getwd()
.ess_funargs("matlines")
.ess_funargs("sapply")
.ess_funargs("sapply")
source('R/source.R'); foo_distr(g1=70,g2=30,n=50,m=1000)
c
getwd()
.ess_funargs("plot")
source('R/source.R'); foo_distr(g1=70,g2=30,n=50,m=1000)
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
legend('topleft',legend=what,title='distribution',col=col,cex=0.8,bty='n');
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
legend('right',legend=what,title='distribution',col=col,lty='solid',cex=0.8,bty='n');
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
legend('right',legend=what,title='distribution',col=col,lty='solid',pch=19,bty='n');
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
legend('bottom',legend=what,title='distribution',col=col,lty='solid',pch=19,seg.len=6,bty='n');
.ess_funargs("pbinom")
getwd()
legend('middle',legend=what,title='distribution',col=col,lty='solid',pch=19,seg.len=6,bty='n');
.ess_funargs("c")
.ess_funargs("pbinom")
.ess_funargs("pbinom")
.ess_funargs("pbinom")
.ess_funargs("pbinom")
.ess_funargs("pbinom")
.ess_funargs("pbinom")
legend('center',legend=what,title='distribution',col=col,lty='solid',pch=19,seg.len=6,bty='n');
getwd()
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
.ess_funargs("legend")
legend('left',legend=what,title='distribution',col=col,lty='solid',pch=19,seg.len=4,bty='n');
getwd()
Q
source('R/source.R'); foo_distr(g1=70,g2=30,n=50,m=1000)
.ess_funargs("c")
.ess_funargs("c")
.ess_funargs("foo_distr")
.ess_funargs("foo_distr")
.ess_funargs("foo_distr")
.ess_funargs("foo_distr")
.ess_funargs("foo_distr")
.ess_funargs("foo_distr")
source('R/source.R'); foo_distr(g1=85,g2=15,n=50,m=1000)
.ess_funargs("c")
.ess_funargs("c")
.ess_funargs("foo_distr")
.ess_funargs("foo_distr")
.ess_funargs("foo_distr")
source('R/source.R'); foo_distr(g1=85,g2=15,n=90,m=1000)
nudge
round(subset(nudge,select=c(n.all,n.treated,n.control,cvr.f,pval.binom,pval.hyper)),digits=4)
.ess_funargs("c")
.ess_funargs("c")
.ess_funargs("foo_distr")
.ess_funargs("foo_distr")
.ess_funargs("foo_distr")
.ess_funargs("foo_distr")
.ess_funargs("foo_distr")
.ess_funargs("foo_distr")
.ess_funargs("foo_distr")
.ess_funargs("foo_distr")
.ess_funargs("foo_distr")
source('R/source.R'); foo_distr(g1=850,g2=150,n=970,m=1000)
getwd()
.ess_funargs("matlines")
.ess_funargs("matlines")
.ess_funargs("matlines")
.ess_funargs("foo_distr")
.ess_funargs("foo_distr")
.ess_funargs("foo_distr")
.ess_funargs("foo_distr")
.ess_funargs("foo_distr")
.ess_funargs("foo_distr")
.ess_funargs("foo_distr")
.ess_funargs("foo_distr")
.ess_funargs("foo_distr")
source('R/source.R'); foo_distr(g1=85000,g2=15000,n=97000,m=1000)
getwd()
.ess_funargs("qhyper")
.ess_funargs("c")
.ess_funargs("c")
.ess_funargs("c")
.ess_funargs("c")
.ess_funargs("c")
.ess_funargs("c")
.ess_funargs("c")
.ess_funargs("c")
.ess_funargs("c")
.ess_funargs("c")
.ess_funargs("qhyper")
qhyper(c(.001,.999),g1,g2,n)
getwd()
.ess_funargs("do.call")
.ess_funargs("do.call")
.ess_funargs("do.call")
.ess_funargs("do.call")
.ess_funargs("do.call")
.ess_funargs("lapply")
.ess_funargs("lapply")
.ess_funargs("lapply")
.ess_funargs("lapply")
.ess_funargs("lapply")
.ess_funargs("lapply")
.ess_funargs("lapply")
.ess_funargs("lapply")
.ess_funargs("lapply")
.ess_funargs("qhyper")
.ess_funargs("qhyper")
.ess_funargs("c")
.ess_funargs("c")
.ess_funargs("qhyper")
.ess_funargs("qhyper")
.ess_funargs("qbinom")
.ess_funargs("qbinom")
.ess_funargs("range")
.ess_funargs("range")
.ess_funargs("range")
.ess_funargs("range")
.ess_funargs("range")
.ess_funargs("range")
.ess_funargs("range")
.ess_funargs("range")
.ess_funargs("range")
.ess_funargs("do.call")
.ess_funargs("matlines")
.ess_funargs("foo_distr")
.ess_funargs("foo_distr")
source('R/source.R'); theo_distr(g1=85000,g2=15000,n=97000,m=1000)
getwd()
.ess_funargs("theo_distr")
.ess_funargs("theo_distr")
source('R/source.R'); theo_distr(g1=85000,g2=15000,n=97000,m=1000)
.ess_funargs("plot")
getwd()
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
.ess_funargs("plot")
plot(1:10,xlim=NULL)
getwd()
.ess_funargs("range")
.ess_funargs("nil")
.ess_funargs("nil")
.ess_funargs("nil")
.ess_funargs("nil")
.ess_funargs("nil")
.ess_funargs("nil")
.ess_funargs("range")
.ess_funargs("matplot")
.ess_funargs("matplot")
.ess_funargs("matplot")
.ess_funargs("matplot")
.ess_funargs("nvq")
theo_distr(g1=85000,g2=15000,n=97000,m=1000)
dev.new(); source('R/source.R'); theo_distr(g1=85000,g2=15000,n=97000,m=1000)
.ess_funargs("theo_distr")
.ess_funargs("theo_distr")
.ess_funargs("theo_distr")
.ess_funargs("theo_distr")
.ess_funargs("theo_distr")
.ess_funargs("theo_distr")
.ess_funargs("theo_distr")
.ess_funargs("theo_distr")
.ess_funargs("theo_distr")
.ess_funargs("theo_distr")
.ess_funargs("theo_distr")
.ess_funargs("theo_distr")
dev.new(); source('R/source.R'); theo_distr(g1=85000,g2=15000,n=97000,m=1000,extend.x=F)
getwd()
q('yes')
